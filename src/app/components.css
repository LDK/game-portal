@tailwind components;

.felt-effect {
  height: 100vh;
  width: 100%;
  background-color: #4a752c; /* Base green similar to felt tables */
  background-attachment: fixed;
  background-image:
    repeating-linear-gradient(
      0deg,
      rgba(255, 255, 255, 0.1) 0px,
      rgba(255, 255, 255, 0.1) 1px,
      transparent 1px,
      transparent 3px
    ),
    repeating-linear-gradient(
      -90deg,
      rgba(255, 255, 255, 0.1) 0px,
      rgba(255, 255, 255, 0.1) 1px,
      transparent 1px,
      transparent 3px
    ),
    linear-gradient(180deg, #4a752c 75%, #063108);
  filter: contrast(150%) brightness(90%);
}

body {
  @apply felt-effect text-white;
}

main {
  @apply flex min-h-screen flex-col items-center justify-between px-8 pb-4 text-white;
  height: 100%;
}

.inner-container {
  @apply z-10 w-full max-w-5xl items-center justify-between text-sm
}

button {
  @apply border border-white text-white py-2 px-4 rounded transition-colors focus:border-gold-300 active:border-gold-400 hover:border-gold-300 disabled:border-gray-400 disabled:bg-gray-400 disabled:text-gray-300 disabled:hover:border-gray-400 disabled:hover:bg-gray-400 disabled:hover:text-gray-300 disabled:cursor-not-allowed disabled:font-thin disabled:italic font-normal
}

button:focus {
  outline: none;
}

button:not(:last-child) {
  @apply mr-2
}

.game-log, .scoreboard {
  @apply flex flex-col items-center justify-center w-full h-1/2 overflow-y-auto bg-white bg-opacity-50 rounded-lg p-4 text-black
}

.cancel {
  @apply bg-red-400 hover:bg-red-500 focus:bg-red-500 active:bg-red-400
}

.confirm {
  @apply bg-green-400 hover:bg-green-500 focus:bg-green-500 active:bg-green-400
}

.action {
  @apply bg-blue-400 hover:bg-blue-500 focus:bg-blue-500 active:bg-blue-400
}

.bg-overlay {
  background-image: linear-gradient(90deg, rgba(180,160,75,.75) 80%, rgba(180,160,75,.5) 100%);
}

.content-area {
  @apply rounded-xl border border-gold-500 border-dashed bg-overlay relative;
  min-height: calc(100vh - 2rem - 72px);
}

/* Cards */

html {
  --card-width-factor: 2.5;
  --card-height-factor: 3.5;
  --card-size-base: 2rem;
}

@layer components {
  .playing-card {
    @apply rounded-lg shadow-md p-0 m-0;
  }

  .card-size {
    width: calc(var(--card-width-factor) * var(--card-size-base) * 1.2);
    height: calc(var(--card-height-factor) * var(--card-size-base) * 1.2);
  }

  .card-size-lg {
    width: calc(var(--card-width-factor) * var(--card-size-base) * 1.4);
    height: calc(var(--card-height-factor) * var(--card-size-base) * 1.4);
  }

  .card-size-xl {
    width: calc(var(--card-width-factor) * var(--card-size-base) * 1.6);
    height: calc(var(--card-height-factor) * var(--card-size-base) * 1.6);
  }

  .card-size-sm {
    width: calc(var(--card-width-factor) * var(--card-size-base) / 1.2);
    height: calc(var(--card-height-factor) * var(--card-size-base) / 1.2);
  }

  .card-size-xs {
    width: calc(var(--card-width-factor) * var(--card-size-base) / 1.35);
    height: calc(var(--card-height-factor) * var(--card-size-base) / 1.35);
  }

  .playing-card {
    @apply card-size-xs sm:card-size-sm md:card-size lg:card-size-lg xl:card-size-xl
  }
  .playable .playing-card {
    @apply cursor-pointer;
    border-color: #5ee0f6 !important;
  }
}